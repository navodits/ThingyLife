{"version":3,"sources":["services/httpService.js","services/postsService.js","components/common/pagination.jsx","components/common/star.jsx","components/common/tableBody.jsx","components/common/tableHeader.jsx","components/postsTable.jsx","components/common/searchBox.jsx","components/photographs.jsx","services/authService.js","components/ImageUploader.jsx","services/photosService.js","components/thingsHappend.jsx","utils/paginate.js","components/navbar.jsx","components/thingsToDo.jsx","components/ThingsYoDid.jsx","components/notFound.jsx","components/common/input.jsx","components/forms/form.jsx","components/forms/postsForm.jsx","components/forms/loginForm.jsx","services/userService.js","components/forms/RegisterForm.jsx","components/logout.jsx","components/common/button.jsx","components/welcomePage.jsx","components/account.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","interceptors","response","use","error","status","stats","console","log","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","baseUrl","apiEndpoint","http","getPost","postId","savePost","_id","body","Pagination","props","totalItems","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","className","map","page","key","onClick","Star","iconClass","this","liked","onLiked","aria-hidden","Component","TableBody","renderCell","item","column","content","path","createKey","data","columns","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","style","width","label","PostsTable","posts","onLike","onDelete","Link","to","title","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Photographs","Carousel","photos","photo","Item","interval","height","src","imageUrl","alt","tokenKey","login","username","password","a","localStorage","setItem","getCurrentUser","getItem","JwtDecode","ex","ImageUploader","id","multiple","getPhotos","user_id","params","addPhoto","config","ThingsHappend","state","selectedPhoto","searchQuery","selectedFilter","isPhotoAdded","handleAdd","user","formData","FormData","append","email","setState","handleChooseFile","target","files","handleLike","index","indexOf","handleDelete","originalPosts","filter","p","handlePageChange","handleSearch","query","handleSelectedItem","handleSort","allPosts","filtered","toLowerCase","startsWith","items","pageNumber","startIndex","slice","take","paginate","orderBy","length","animationData","done","loop","onComplete","window","location","NavBar","buttonVisible","showButton","Window","addEventListener","Fragment","first_name","ThingsToDo","ThingsYoDid","NotFound","Input","isTextArea","rest","htmlFor","autoFocus","rows","Form","errors","validate","result","Joi","schema","abortEarly","details","message","handleSubmit","preventDefault","doSubmit","handleChange","rendreButton","disabled","renderInput","PostForm","string","required","history","push","match","mapData","replace","populatePosts","onSubmit","undefined","LoginForm","RegisterForm","firstName","lastName","min","last_name","Logout","removeItem","STYLES","SIZES","Button","children","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","WelcomePage","Account","ProtectedRoute","component","render","App","Switch","Route","PostsForm","exact","Redirect","from","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff6d9d70.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.stats < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(\"Logging the error\", error);\r\n    toast.error(\"An unexpected error has occured\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt){\r\n  axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\n//  const baseUrl = \"http://localhost:8000/\"\r\nconst baseUrl = \"https://thingylife-backend.herokuapp.com/\"\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n  baseUrl\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = http.baseUrl + \"posts/\";\r\n\r\nexport function getPosts(user_id) {\r\n  return http.get(apiEndpoint, {params: {user_id}});\r\n}\r\n\r\nexport function getPost(postId) {\r\n  return http.get(apiEndpoint + postId);\r\n}\r\n\r\nexport function savePost(post) {\r\n  if (post._id) {\r\n    const body = { ...post };\r\n    delete body._id;\r\n    return http.put(apiEndpoint + post._id, body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, post);\r\n}\r\n\r\nexport function deletePost(postId) {\r\n  return http.delete(apiEndpoint + postId);\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = (props) => {\r\n  const { totalItems, pageSize, currentPage, onPageChange } = props;\r\n\r\n  const pagesCount = Math.ceil(totalItems / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  totalItems: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Star extends Component {\r\n  render() {\r\n    let iconClass = \"fa fa-star\";\r\n\r\n    if (this.props.liked === false) {\r\n      iconClass += \"-o\";\r\n    }\r\n\r\n    return (\r\n      <i\r\n        onClick={this.props.onLiked}\r\n        className={iconClass}\r\n        aria-hidden=\"true\"\r\n      ></i>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Star;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport \"../table.css\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) {\r\n      return column.content(item);\r\n    }\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td className=\"table-data\" key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport \"./../table.css\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n  renderSortIcon = (column) => {\r\n    if (column.path !== this.props.sortColumn.path) return null;\r\n\r\n    if (this.props.sortColumn.order === \"asc\") {\r\n      return <i className=\"fa fa-sort-asc\" />;\r\n    }\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"table-header\"\r\n              style={column.path == \"datePosted\" ? { width: \"15%\" } : {}}\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Star from \"./common/star\";\r\nimport TableBody from \"./common/tableBody\";\r\nimport TableHeader from \"./common/tableHeader\";\r\nimport \"./table.css\";\r\n\r\nconst PostsTable = (props) => {\r\n  const { posts, onLike, onDelete, onSort, sortColumn } = props;\r\n\r\n  const columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (post) => (\r\n        <Link to={`/thingsHappend/${post._id}`}>{post.title} </Link>\r\n      ),\r\n    },\r\n    { path: \"content\", label: \"Content\" },\r\n    { path: \"datePosted\", label: \"Date Posted\" },\r\n    {\r\n      key: \"like\",\r\n      content: (post) => (\r\n        <Star onLiked={() => onLike(post)} liked={post.liked} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (post) => (\r\n        <button\r\n          onClick={() => onDelete(post)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n      <table className=\"table\">\r\n        <TableHeader\r\n          columns={columns}\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n        />\r\n        <TableBody data={posts} columns={columns} />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsTable;\r\n","import React from \"react\";\r\nimport \"../thingsHappend.css\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"search-box\"\r\n      placeholder=\"Search Posts...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport \"./photographs.css\";\r\n\r\nclass Photographs extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-carousel\">\r\n        <Carousel>\r\n          {this.props.photos.map((photo) => (\r\n            <Carousel.Item key={photo._id} interval={1000}>\r\n              <img\r\n                width={500}\r\n                height={360}\r\n                className=\"d-block w-100\"\r\n                src={photo.imageUrl}\r\n                alt=\"Memories\"\r\n              />\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n        <h4>Your Best Memories</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Photographs;\r\n","import JwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = http.baseUrl + \"users/login/\";\r\nconst tokenKey= \"token\";\r\n\r\nhttp.setJwt(getJwt())\r\n\r\nexport async function login(username, password){\r\n  const {data:jwt}= await http.post(apiEndpoint, {username, password})\r\n  localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport function loginWithJwt(jwt){\r\n  localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport function logout(){\r\n  localStorage.removeItem(tokenKey)\r\n}\r\n\r\nexport function getCurrentUser(){\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return JwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport function getJwt(){\r\n return localStorage.getItem(tokenKey)\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./imageUploader.css\";\r\n\r\nclass ImageUploader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"add-photo-container\">\r\n        <input\r\n          className=\"file-container\"\r\n          type=\"file\"\r\n          id=\"multi\"\r\n          onChange={this.props.onChange}\r\n          multiple\r\n        />\r\n\r\n        <button className=\"btn btn-primary \" onClick={this.props.onClick}>\r\n          Add More Memories\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageUploader;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = http.baseUrl + \"images/\";\r\n\r\nexport function getPhotos(user_id) {\r\n  return http.get(apiEndpoint, {params: {user_id}});\r\n}\r\n\r\nexport function addPhoto(body, config) {\r\n  return http.post(apiEndpoint, body, config);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Lottie from \"lottie-react\";\r\nimport { getPosts, deletePost } from \"../services/postsService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport PostsTable from \"./postsTable\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./thingsHappend.css\";\r\nimport Photographs from \"./photographs\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\nimport ImageUploader from \"./ImageUploader\";\r\nimport { addPhoto, getPhotos } from \"./../services/photosService\";\r\nimport done from \"../assets/animation/8580-done.json\";\r\n\r\nclass ThingsHappend extends Component {\r\n  state = {\r\n    posts: [],\r\n    photos: [],\r\n    selectedPhoto: null,\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedFilter: \"\",\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    isPhotoAdded: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const user = getCurrentUser();\r\n    const { data: posts } = await getPosts(user.email);\r\n    console.log(posts);\r\n    const { data: photos } = await getPhotos(user.email);\r\n    this.setState({ posts, photos });\r\n  }\r\n\r\n  handleAdd = async (e) => {\r\n    const user = getCurrentUser();\r\n    let formData = new FormData();\r\n    formData.append(\"image\", this.state.selectedPhoto);\r\n    formData.append(\"user_id\", user.email);\r\n    console.log(user.email);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    try {\r\n      const response = await addPhoto(formData, config);\r\n      this.setState({\r\n        isPhotoAdded: true,\r\n        photos: [response.data, ...this.state.photos],\r\n      });\r\n    } catch (ex) {}\r\n  };\r\n\r\n  handleChooseFile = (e) => {\r\n    this.setState({ selectedPhoto: e.target.files[0] });\r\n  };\r\n\r\n  handleLike = (post) => {\r\n    const posts = [...this.state.posts];\r\n    const index = posts.indexOf(post);\r\n    posts[index] = { ...posts[index] };\r\n    posts[index].liked = !posts[index].liked;\r\n    this.setState({ posts });\r\n  };\r\n\r\n  handleDelete = async (post) => {\r\n    const originalPosts = this.state.posts;\r\n    const posts = this.state.posts.filter((p) => p._id !== post._id);\r\n\r\n    this.setState({ posts });\r\n\r\n    try {\r\n      await deletePost(post._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        toast.error(\"This post has already been deleted\");\r\n        this.setState({ posts: originalPosts });\r\n      }\r\n    }\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedFilter: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSelectedItem = (item) => {\r\n    this.setState({ selectedFilter: item, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      posts: allPosts,\r\n      sortColumn,\r\n      searchQuery,\r\n      isPhotoAdded,\r\n      photos,\r\n    } = this.state;\r\n\r\n    let filtered = allPosts;\r\n    if (searchQuery) {\r\n      filtered = allPosts.filter((post) =>\r\n        post.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered =\r\n        this.state.selectedFilter === \"Liked\"\r\n          ? allPosts.filter((p) => p.liked === true)\r\n          : allPosts;\r\n    }\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const posts = paginate(sorted, currentPage, pageSize);\r\n\r\n    return (\r\n      <div>\r\n        <Link to=\"thingsHappend/new\">\r\n          <button className=\"btn btn-primary\">Add Post</button>\r\n        </Link>\r\n        <SearchBox\r\n          value={this.state.searchQuery}\r\n          onChange={this.handleSearch}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <ImageUploader\r\n              onClick={this.handleAdd}\r\n              onChange={(e) => {\r\n                this.setState({ selectedPhoto: e.target.files[0] });\r\n              }}\r\n            />\r\n            {photos.length !== 0 && <Photographs photos={this.state.photos} />}\r\n          </div>\r\n          <div className=\"col-md-2 animation\">\r\n            {isPhotoAdded && (\r\n              <Lottie\r\n                animationData={done}\r\n                style={{ width: 100, height: 100 }}\r\n                loop={false}\r\n                onComplete={() => {\r\n                  this.setState({ isPhotoAdded: false });\r\n                  window.location = \"/thingsHappend\";\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-6 container-posts\">\r\n            <PostsTable\r\n              sortColumn={sortColumn}\r\n              posts={posts}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              totalItems={filtered.length}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThingsHappend;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.css\";\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    buttonVisible: true,\r\n  };\r\n\r\n  showButton = () => {\r\n    if (Window.length <= 960) {\r\n      this.setState({ buttonVisible: false });\r\n    } else {\r\n      this.setState({ buttonVisible: true });\r\n    }\r\n  };\r\n  render() {\r\n    window.addEventListener(\"resize\", this.showButton);\r\n    const { user } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg \">\r\n        <Link className=\"navbar-brand\" to=\"/thingsHappend\">\r\n          ThingyLife\r\n          <i className=\"fa fa-cubes\" />\r\n        </Link>\r\n\r\n        <div className=\" navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/thingsHappend\">\r\n                Things Happend\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/thingsToDo\">\r\n                Things To Do\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/thingsYoDid\">\r\n                Things Yo Did\r\n              </Link>\r\n            </li>\r\n            {user && (\r\n              <React.Fragment>\r\n                <li className=\"nav-item account\">\r\n                  <Link className=\"nav-link\" to=\"/account\">\r\n                    {user.first_name}\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/logout\">\r\n                    Logout\r\n                  </Link>\r\n                </li>\r\n              </React.Fragment>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ThingsToDo extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Things To Do (Coming Soon)</h1>;\r\n  }\r\n}\r\n\r\nexport default ThingsToDo;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ThingsYoDid extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Things Yo Did (Coming Soon)</h1>;\r\n  }\r\n}\r\n\r\nexport default ThingsYoDid;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Not Found</h1>;\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport \"../forms/form.css\";\r\n\r\nconst Input = ({ name, error, label, isTextArea, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label className=\"form-label\" htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      {!isTextArea && (\r\n        <input\r\n          {...rest}\r\n          className=\"form-control\"\r\n          name={name}\r\n          autoFocus\r\n          id={name}\r\n        />\r\n      )}\r\n      {isTextArea && (\r\n        <textarea\r\n          {...rest}\r\n          rows={8}\r\n          name={name}\r\n          autoFocus\r\n          id={name}\r\n          className=\"textarea\"\r\n        />\r\n      )}\r\n\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"../common/input\";\r\nimport \"./form.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const result = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!result.error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const data = { ...this.state.data };\r\n    data[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState({ data });\r\n  };\r\n\r\n  rendreButton = (label) => {\r\n    return (\r\n      <button className=\"btn btn-primary\" disabled={this.validate()}>\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\", isTextArea = false) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        isTextArea={isTextArea}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        type={type}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./form\";\r\nimport { getPost, savePost } from \"../../services/postsService\";\r\nimport { getCurrentUser } from \"../../services/authService\";\r\n\r\nclass PostForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      content: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    content: Joi.string().required().label(\"Content\"),\r\n  };\r\n\r\n  async populatePosts() {\r\n    try {\r\n      const postId = this.props.match.params.id;\r\n      if (postId === \"new\") return;\r\n      const { data: post } = await getPost(postId);\r\n      this.setState({ data: this.mapData(post) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        return this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populatePosts();\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    const user = getCurrentUser();\r\n    const body = { ...this.state.data, user_id: user.email };\r\n    await savePost(body);\r\n\r\n    this.props.history.push(\"/thingsHappend\");\r\n  };\r\n\r\n  mapData(post) {\r\n    return {\r\n      _id: post._id,\r\n      title: post.title,\r\n      content: post.content,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Post Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderInput(\"content\", \"Content\", undefined, true)}\r\n          {this.rendreButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./form\";\r\nimport { login } from \"../../services/authService\";\r\nimport \"./form.css\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Email\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      console.log(this.state.data);\r\n      const { data } = this.state;\r\n      await login(data.username, data.password);\r\n\r\n      window.location = \"/thingsHappend\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        let errors = { ...this.state.errors };\r\n        errors.username = \"Invalid Credentials\";\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-container\">\r\n        <div className=\"form-container\">\r\n          <h1>Login</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInput(\"username\", \"Email\")}\r\n            {this.renderInput(\"password\", \"Password\", \"password\")}\r\n\r\n            {this.rendreButton(\"Login\")}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = http.baseUrl + \"users/\";\r\n\r\nexport function register(user){\r\n  return http.post(apiEndpoint, {\r\n        username : user.username,\r\n        email: user.email,\r\n        password : user.password,\r\n        first_name : user.firstName,\r\n        last_name : user.lastName\r\n    })\r\n}","import React from \"react\";\r\nimport Form from \"./form\";\r\nimport Joi from \"joi-browser\";\r\nimport * as userService from \"../../services/userService\";\r\nimport \"./form.css\";\r\nimport { loginWithJwt } from \"../../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Email\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    firstName: Joi.string().required().label(\"First Name\"),\r\n    lastName: Joi.string().required().label(\"Last Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register({\r\n        ...this.state.data,\r\n        email: this.state.data.username,\r\n      });\r\n      loginWithJwt(response.data[\"token\"]);\r\n      window.location = \"/thingsHappend\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        let errors = { ...this.state.errors };\r\n        console.log(ex.response.data);\r\n        errors.username = \"User is already registered with this credential\";\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"page-container\">\r\n        <div className=\"form-container\">\r\n          <h1 className=\"header\">Register</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInput(\"username\", \"Email\")}\r\n            {this.renderInput(\"password\", \"Password\", \"password\")}\r\n            {this.renderInput(\"firstName\", \"First Name\")}\r\n            {this.renderInput(\"lastName\", \"Last Name\")}\r\n            {this.rendreButton(\"Register\")}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { Component } from \"react\";\r\nimport { logout } from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./button.css\";\r\n\r\nconst STYLES = [\"btn-primary\", \"btn-outline\"];\r\nconst SIZES = [\"btn-medium\", \"btn-large\"];\r\nclass Button extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      type,\r\n      onClick,\r\n      buttonStyle,\r\n      buttonSize,\r\n      path = \"not-found\",\r\n    } = this.props;\r\n    const checkButtonStyle = STYLES.includes(buttonStyle)\r\n      ? buttonStyle\r\n      : STYLES[0];\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n    return (\r\n      <Link to={path} className=\"btn-mobile\">\r\n        <button\r\n          className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n          onClick={onClick}\r\n          type={type}\r\n        >\r\n          {children}\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./common/button\";\r\nimport \"./welcomePage.css\";\r\n\r\nclass WelcomePage extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n        <h1> Welcome to your ThingyLife</h1>\r\n        <div className=\"home-btns\">\r\n          <Button path=\"login\" buttonStyle=\"btn-outline\" buttonSize=\"btn-large\">\r\n            Login\r\n          </Button>\r\n          <Button\r\n            path=\"register\"\r\n            buttonStyle=\"btn-outline\"\r\n            buttonSize=\"btn-large\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </div>\r\n        <h3>\r\n          Lets start journaling your life <br /> full of expected/unexpected\r\n          things.\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WelcomePage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Account extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>My Account(Coming Soon)</h1>;\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { getCurrentUser } from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      path={path}\r\n      render={(props) => {\r\n        if (!getCurrentUser()) {\r\n          return <Redirect to=\"login\" />;\r\n        }\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport ThingsHappend from \"./components/thingsHappend\";\r\nimport NavBar from \"./components/navbar\";\r\nimport ThingsToDo from \"./components/thingsToDo\";\r\nimport ThingsYoDid from \"./components/ThingsYoDid\";\r\nimport NotFound from \"./components/notFound\";\r\nimport PostsForm from \"./components/forms/postsForm\";\r\nimport LoginForm from \"./components/forms/loginForm\";\r\nimport RegisterForm from \"./components/forms/RegisterForm\";\r\nimport PostForm from \"./components/forms/postsForm\";\r\nimport Logout from \"./components/logout\";\r\nimport WelcomePage from \"./components/welcomePage\";\r\nimport Account from \"./components/account\";\r\nimport { getCurrentUser } from \"./services/authService\";\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    const user = getCurrentUser();\r\n    this.setState({ user });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <main className=\"app\">\r\n          {this.state.user != null && <NavBar user={this.state.user} />}\r\n          <Switch>\r\n            <Route path=\"/register\" component={RegisterForm} />\r\n            <Route path=\"/login\" component={LoginForm} />\r\n            <ProtectedRoute path=\"/logout\" component={Logout} />\r\n            <ProtectedRoute path=\"/new\" component={PostForm} />\r\n            <ProtectedRoute path=\"/account\" component={Account} />\r\n            <ProtectedRoute path=\"/thingsHappend/:id\" component={PostsForm} />\r\n            <ProtectedRoute path=\"/thingsHappend\" component={ThingsHappend} />\r\n            <ProtectedRoute path=\"/thingsToDo\" component={ThingsToDo} />\r\n            <ProtectedRoute path=\"/thingsYoDid\" component={ThingsYoDid} />\r\n            {this.state.user == null && <Route exact path=\"/\" component={WelcomePage} /> }\r\n            <Redirect from=\"/\" to=\"/thingsHappend\"  />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}